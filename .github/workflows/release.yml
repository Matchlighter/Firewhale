name: Build and Release Docker Image

on:
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ github.ref == 'refs/heads/main' && 'ghcr.io/matchlighter/firewhale:edge' || '' }}
            ${{ startsWith(github.ref, 'refs/tags/v') && 'ghcr.io/matchlighter/firewhale:latest' || '' }}
            ${{ startsWith(github.ref, 'refs/tags/v') && format('ghcr.io/matchlighter/firewhale:{0}', github.ref_name) || '' }}

  create-release:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate release notes
        id: release_notes
        run: |
          echo "## Changes" > release_notes.md
          git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"- %s" >> release_notes.md

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body_path: ./release_notes.md
          draft: false
          prerelease: false
